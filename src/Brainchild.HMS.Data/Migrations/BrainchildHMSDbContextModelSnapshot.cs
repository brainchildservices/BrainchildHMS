// <auto-generated />
using System;
using Brainchild.HMS.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Brainchild.HMS.Data.Migrations
{
    [DbContext(typeof(BrainchildHMSDbContext))]
    partial class BrainchildHMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Billing", b =>
                {
                    b.Property<int>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelID")
                        .HasColumnType("int");

                    b.HasKey("BillingId");

                    b.HasIndex("BookingId");

                    b.HasIndex("HotelID");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CancelleddDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("IsCancelled")
                        .HasColumnType("int");

                    b.Property<int>("NoOfAChildren")
                        .HasColumnType("int");

                    b.Property<int>("NoOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("HotelID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Charge", b =>
                {
                    b.Property<int>("ChargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChargeAmount")
                        .HasColumnType("real");

                    b.Property<int>("ChargeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyCodeId")
                        .HasColumnType("int");

                    b.HasKey("ChargeId");

                    b.HasIndex("ChargeTypeId");

                    b.HasIndex("CurrencyCodeId");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.ChargeType", b =>
                {
                    b.Property<int>("ChargeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChargeTypeDescription")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.HasKey("ChargeTypeId");

                    b.HasIndex("HotelID");

                    b.ToTable("ChargeTypes");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.CurrencyCode", b =>
                {
                    b.Property<int>("CurrencyCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCodes")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("CurrencyCountry")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("CurrencyNumber")
                        .HasColumnType("int");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.HasKey("CurrencyCodeId");

                    b.HasIndex("HotelID");

                    b.ToTable("CurrencyCode");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuestAddress")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GuestCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("GuestPhoneNo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.HasKey("GuestId");

                    b.HasIndex("HotelID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Hotel", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GSTNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HotelEmail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HotelPhone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RegistrationNo")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TenantID")
                        .HasColumnType("int");

                    b.HasKey("HotelID");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingId")
                        .HasColumnType("int");

                    b.Property<float>("PaymentAdvance")
                        .HasColumnType("real");

                    b.Property<float>("PaymentAmount")
                        .HasColumnType("real");

                    b.Property<int>("PaymentTypeID")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("BillingId");

                    b.HasIndex("PaymentTypeID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTypeDescription")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.HasKey("PaymentTypeID");

                    b.HasIndex("HotelID");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomNo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomNo");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.RoomBooking", b =>
                {
                    b.Property<int>("RoomBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("RoomBookingId");

                    b.HasIndex("BookingId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomBookings");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<float>("RoomRate")
                        .HasColumnType("real");

                    b.Property<string>("RoomTypeDesctiption")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.HasKey("RoomTypeId");

                    b.HasIndex("HotelID");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Tax", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxDecription")
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("TaxPercentage")
                        .HasColumnType("int");

                    b.HasKey("TaxId");

                    b.HasIndex("HotelID");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Billing", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Booking", "Booking")
                        .WithMany("Bills")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("Billing")
                        .HasForeignKey("HotelID");

                    b.Navigation("Booking");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Booking", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("Bookings")
                        .HasForeignKey("HotelID");

                    b.Navigation("Guest");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Charge", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.ChargeType", "ChargeType")
                        .WithMany()
                        .HasForeignKey("ChargeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Brainchild.HMS.Core.Models.CurrencyCode", "CurrencyCode")
                        .WithMany("Charges")
                        .HasForeignKey("CurrencyCodeId");

                    b.Navigation("ChargeType");

                    b.Navigation("CurrencyCode");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.ChargeType", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("ChargeTypes")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.CurrencyCode", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("CurrencyCodes")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Guest", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("Guests")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Payment", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Billing", "Billing")
                        .WithMany("Payments")
                        .HasForeignKey("BillingId");

                    b.HasOne("Brainchild.HMS.Core.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billing");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.PaymentType", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("PaymentTypes")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Room", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.RoomBooking", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Booking", "Booking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Brainchild.HMS.Core.Models.Room", "Room")
                        .WithMany("RoomBookings")
                        .HasForeignKey("RoomId");

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.RoomType", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("RoomTypes")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Tax", b =>
                {
                    b.HasOne("Brainchild.HMS.Core.Models.Hotel", "Hotel")
                        .WithMany("Taxes")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Billing", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Booking", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.CurrencyCode", b =>
                {
                    b.Navigation("Charges");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Hotel", b =>
                {
                    b.Navigation("Billing");

                    b.Navigation("Bookings");

                    b.Navigation("ChargeTypes");

                    b.Navigation("CurrencyCodes");

                    b.Navigation("Guests");

                    b.Navigation("PaymentTypes");

                    b.Navigation("RoomTypes");

                    b.Navigation("Taxes");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.Room", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("Brainchild.HMS.Core.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
